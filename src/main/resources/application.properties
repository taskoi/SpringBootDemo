server.port=8080

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=wf-ivantasevski
spring.datasource.password=postgres

#Home
#spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres

spring.jpa.database=POSTGRESQL
# The SQL dialect makes Hibernate generate better SQL for the chosen database

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# Hibernate ddl auto (create, create-drop, validate, update)



spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true



#OAuth configuration googleapi
#security.oauth2.client.cliendId=1064989775608-n99p9hig9g8q48pe7g12n70bup68t2tu.apps.googleusercontent.com
#security.oauth2.client.client-secret=m7SvIF6_yzaYuuOvIekWWa5b
#security.oauth2.client.accessTokenUri = https://googleapis.com/oauth2/v3/token
#security.oauth2.client.user-authorization-uri = https://accounts.google.com/o/oauth2/auth
#security.oauth2.client.token-name = oauth_token
#security.oauth2.client.authentication-scheme = query
#security.oauth2.client.client-authentication-scheme = form
#security.oauth2.client.scope= profile email
#security.oauth2.resource.user-info-uri = https://googleapis.com/userinfo/v2/me
#security.oauth2.resource.prefer-token-info = false
